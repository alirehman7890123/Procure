name: Build PyInstaller App (Debian 12)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: debian:12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y python3.11 python3.11-venv python3-pip python3-dev build-essential libglib2.0-0 libgl1-mesa-glx libxkbcommon-x11-0 libdbus-1-3 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-xfixes0 libxcb-sync1 libxcb-xinerama0 libxcb-xinput0 libx11-xcb1 patchelf libxcb-cursor0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-sync1 libxcb-xfixes0 libxkbcommon-x11-0

      - name: Create and activate virtual environment
        run: |
          python3.11 -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip setuptools wheel

      - name: Install project dependencies
        run: |
          . venv/bin/activate
          pip install -r requirements.txt PyInstaller

      - name: Build executable with PyInstaller
        run: |
          . venv/bin/activate
          python -m PyInstaller --noconfirm --onefile --windowed \
            --add-data "styles/*.css:styles" \
            --add-data "res/*.png:res" \
            starting.py

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-executable
          path: dist/
